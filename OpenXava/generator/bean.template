#declare import="org.openxava.util.*"#
#declare import="org.openxava.model.meta.*"#
#declare import="org.openxava.component.MetaComponent"#

# 
String packageName = properties.getProperty("arg3");
String componentName = properties.getProperty("arg4");
String aggregateName = properties.getProperty("arg5");

MetaAggregate metaAggregate = MetaComponent.get(componentName).getMetaAggregate(aggregateName);
String interfaces = metaAggregate.getInterfacesNames().isEmpty()?"":", " + metaAggregate.getImplements();
#

// File generated by OpenXava: #(new Date())#
// Archivo generado por OpenXava: #(new Date())#

// WARNING: NO EDIT
// OJO: NO EDITAR

package #(packageName)#;

import org.openxava.component.MetaComponent;
import org.openxava.model.meta.MetaModel;
import org.openxava.util.XavaException;

public class #(aggregateName)# implements java.io.Serializable#(interfaces)# {

	// Attributes/Atributos
# 
Iterator itProperties = metaAggregate.getMetaProperties().iterator();	
while (itProperties.hasNext()) {	
	MetaProperty property = (MetaProperty) itProperties.next();	
	String attributeName = property.getName();
	String type = property.getTypeName();
# 
	private #(type)# #(attributeName)#;
# } //while #

# 
Iterator itReferences = metaAggregate.getMetaReferences().iterator();	
while (itReferences.hasNext()) {	
	MetaReference ref = (MetaReference) itReferences.next();	
	String attributeName = ref.getName();
	String type = ref.getMetaModelReferenced().getInterfaceName();
# 
	private #(type)# #(attributeName)#;
# } //while #



	// Properties/Propiedades
# 
itProperties = metaAggregate.getMetaProperties().iterator();	
while (itProperties.hasNext()) {	
	MetaProperty property = (MetaProperty) itProperties.next();	
	String attributeName = property.getName();
	String propertyName = Strings.firstUpper(attributeName);
	String type = property.getTypeName();
# 
	public #(type)# get#(propertyName)#() {
		return #(attributeName)#;
	}
	public void set#(propertyName)#(#(type)# new#(propertyName)#) {
		this.#(attributeName)# = new#(propertyName)#;
	}
	

# } //while #

	// References
		
# 
itReferences = metaAggregate.getMetaReferences().iterator();	
while (itReferences.hasNext()) {	
	MetaReference ref = (MetaReference) itReferences.next();	
	String attributeName = ref.getName();
	String propertyName = Strings.firstUpper(attributeName);
	String type = ref.getMetaModelReferenced().getInterfaceName();
# 
	public #(type)# get#(propertyName)#() {
		return #(attributeName)#;
	}
	public void set#(propertyName)#(#(type)# new#(propertyName)#) {
		this.#(attributeName)# = new#(propertyName)#;
	}
# } //while #
	
	private MetaModel metaModel;
	public MetaModel getMetaModel() throws XavaException {
		if (metaModel == null) {
			metaModel = MetaComponent.get("#(componentName)#").getMetaAggregate("#(aggregateName)#");
		}
		return metaModel;
	}
	
}