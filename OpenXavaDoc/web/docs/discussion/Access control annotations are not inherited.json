{"page":"security-jsr250-discarded","page_id":"4914153","share_type":"discussion","created":"2008-07-07T01:18:20-07:00","createdBy":"javierpaniza","title":"Access control annotations are not inherited","description":"Why access control annotations are not inherited ?<br \/>\n<br \/>\nThe JSR-250 document in page 12 (2-6) says:<br \/>\n<br \/>\n<em>4. Members inherited from a superclass and which are not hidden or overridden maintain the annotations they had in the class that declared them, including member-level annotations implied by class-level ones.<\/em>","replies":[{"user":"depourtales","created":"2008-07-07T13:27:49-07:00","body":"Because it can lead to some security breaches if the developer is not aware. In security problems, it always best to impose some mandatory management rules like explicit access control declaration. Imagine following situation :<br \/>\n<br \/>\n<!-- ws:start:WikiTextCodeRule:0:\n&lt;pre class=&quot;java&quot;&gt;@RolesAllowed(&amp;quot;superuser&amp;quot;)&lt;br\/&gt;class SomeAbstractAction {&lt;br\/&gt;public void doSomething() {&lt;br\/&gt;...&lt;br\/&gt;}&lt;br\/&gt;&lt;br\/&gt;class SomeConcreteAction extends SomeAbstractAction {&lt;br\/&gt;}&lt;br\/&gt;&lt;br\/&gt;}&lt;br\/&gt;&lt;\/pre&gt;\n -->\n<style type=\"text\/css\"><!--\n\/**\n * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann\n * (http:\/\/qbnz.com\/highlighter\/ and http:\/\/geshi.org\/)\n *\/\n.java  {font-family:monospace;}\n.java .imp {font-weight: bold; color: red;}\n.java .kw1 {color: #000000; font-weight: bold;}\n.java .kw2 {color: #000066; font-weight: bold;}\n.java .kw3 {color: #003399;}\n.java .kw4 {color: #000066; font-weight: bold;}\n.java .co1 {color: #666666; font-style: italic;}\n.java .co2 {color: #006699;}\n.java .co3 {color: #008000; font-style: italic; font-weight: bold;}\n.java .coMULTI {color: #666666; font-style: italic;}\n.java .es0 {color: #000099; font-weight: bold;}\n.java .br0 {color: #009900;}\n.java .sy0 {color: #339933;}\n.java .st0 {color: #0000ff;}\n.java .nu0 {color: #cc66cc;}\n.java .me1 {color: #006633;}\n.java .me2 {color: #006633;}\n.java span.xtra { display:block; }\n\n-->\n<\/style><pre class=\"java\">@RolesAllowed<span class=\"br0\">&#40;<\/span><span class=\"st0\">&quot;superuser&quot;<\/span><span class=\"br0\">&#41;<\/span>\n<span class=\"kw1\">class<\/span> SomeAbstractAction <span class=\"br0\">&#123;<\/span>\n<span class=\"kw1\">public<\/span> <span class=\"kw4\">void<\/span> doSomething<span class=\"br0\">&#40;<\/span><span class=\"br0\">&#41;<\/span> <span class=\"br0\">&#123;<\/span>\n...\n<span class=\"br0\">&#125;<\/span>\n&nbsp;\n<span class=\"kw1\">class<\/span> SomeConcreteAction <span class=\"kw1\">extends<\/span> SomeAbstractAction <span class=\"br0\">&#123;<\/span>\n<span class=\"br0\">&#125;<\/span>\n&nbsp;\n<span class=\"br0\">&#125;<\/span>\n&nbsp;<\/pre>\n\n<!-- ws:end:WikiTextCodeRule:0 --><br \/>\nIn this case, the <em>SomeConcreteAction<\/em> will inherit <em>superuser<\/em> capacities by default which may be dangerous and sometimes hard to track down.<br \/>\n<br \/>\nWhat do you think ?"},{"user":"javierpaniza","created":"2008-07-08T08:22:29-07:00","body":"<em>What do you think ?<\/em><br \/>\nI have not a strong opinion in this issue. Maybe, you are right.<br \/>\nBut, this convention go against JSR-250. Then if some developer is used to EJB3, for example, he will find that standard security annotations on OX do not behave as he expects when inheritance is used. <br \/>\n<br \/>\nI think it's better to follow the standard in syntax and <strong>semantics<\/strong>.<br \/>\nWhat do you think?"}]}