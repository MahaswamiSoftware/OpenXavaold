<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE component SYSTEM "dtds/component.dtd">

<component name="Invoice">
		
	<entity>  
		
		<property name="year" type="int" key="true"
			size="4" required="true"> 			   
			<default-value-calculator class="org.openxava.calculators.CurrentYearCalculator"/>
		</property>	
		<property name="number" type="int" key="true"
			size="6" required="true"/>
		<property name="date" type="java.util.Date" required="true">
			<default-value-calculator class="org.openxava.calculators.CurrentDateCalculator"/>
		</property>	
		<property name="vatPercentage" type="java.math.BigDecimal"
			size="2" scale="1" required="true"/>
		<property name="comment" type="String" size="50"/>
		<property name="paid" type="boolean"/>
		<reference model="Customer" required="true"/>											
		<property name="amountsSum" stereotype="MONEY">
			<calculator class="org.openxava.test.calculators.AmountsSumCalculator"/>
		</property>
		<property name="customerDiscount" stereotype="MONEY">
			<calculator class="org.openxava.test.calculators.CustomerInvoiceDiscountCalculator">
				<set property="number" from="customer.number"/>
				<set property="paid"/>
			</calculator>
		</property>				
		<property name="customerTypeDiscount" stereotype="MONEY">
			<calculator class="org.openxava.test.calculators.CustomerTypeInvoiceDiscountCalculator">
				<set property="type" from="customer.type"/>
			</calculator>
		</property>
		<property name="deliveryDate" type="java.util.Date">
			<calculator class="org.openxava.test.calculators.InvoiceDeliveryDateCalculator"/>
		</property>						
		<property name="detailsCount" type="int" size="3">
			<calculator class="org.openxava.test.calculators.DetailsCountCalculator">
				<set property="year"/>
				<set property="number"/>
			</calculator>		
		</property>
		<property name="importance" type="String" size="10">
			<calculator class="org.openxava.test.calculators.ImportanceCalculator">
				<set property="amount" from="amountsSum"/>
				<set property="importance1" value="Trivial"/>
				<set property="milestone1" value="100"/>
				<set property="importance2" value="Normal"/>
				<set property="milestone2" value="3000"/>
				<set property="importance3" value="Succulent"/>				
			</calculator>
		</property>
		<property name="productUnitPriceSum" stereotype="MONEY">
			<calculator class="org.openxava.test.calculators.InvoiceProductUnitPriceSumCalculator"/>
		</property>						
		<property name="sellerDiscount" stereotype="MONEY">
			<calculator class="org.openxava.test.calculators.SellerInvoiceDiscountCalculator">
				<set property="sellerNumber" from="customer.seller.number"/>
			</calculator>	
		</property>
		<property name="total" stereotype="MONEY">
			<calculator class="org.openxava.test.calculators.TotalInvoiceCalculator">
				<set property="vat"/>
				<set property="amountsSum"/>
			</calculator>
		</property>
		<property name="vat" stereotype="MONEY">
			<calculator class="org.openxava.test.calculators.PercentageCalculator">
				<set property="percentage" from="vatPercentage"/>
				<set property="value" from="amountsSum"/>
			</calculator>
		</property>
		<property name="yearDiscount" stereotype="MONEY">
			<calculator class="org.openxava.test.calculators.YearInvoiceDiscountCalculator">
				<set property="year"/>
			</calculator>
		</property>
		<property name="considerable" type="boolean">
			<calculator class="org.openxava.test.calculators.ConsiderableCalculator">
				<set property="amount" from="amountsSum"/>
				<set property="limit" value="10000"/>
			</calculator>	
		</property>	
								
		<collection name="details">
			<reference model="InvoiceDetail"/>
			<order>${serviceType} desc, ${oid} asc</order>
			<postremove-calculator class="org.openxava.test.calculators.DetailPostremoveCalculator"/>
		</collection>
						
		<collection name="deliveries">
			<reference model="Delivery"/>
		</collection>
		
		<!-- The same that 'details' but implemented with a calculator -->
		<collection name="calculatedDetails"> 			
			<reference model="InvoiceDetail"/>			
			<calculator class="org.openxava.test.calculators.InvoiceDetailsCalculator"/>
		</collection>		
				
		<finder name="all" arguments="" collection="true">
			<condition>1 = 1</condition>
		</finder>
		
		<finder name="paidOnes" arguments="" collection="true">
			<condition>${paid} = 'S'</condition>
		</finder>
		
		<finder name="notPaidOnes" arguments="" collection="true">
			<condition>${paid} &lt;&gt; 'S'</condition>
		</finder>
		
	</entity>	
		
	<aggregate name="InvoiceDetail">
		<property name="oid" type="String" key="true" hidden="true">
			<default-value-calculator 
				class="org.openxava.test.calculators.InvoiceDetailOidCalculator"
				on-create="true"/>
		</property>
		<property name="serviceType">
			<valid-values>
				<valid-value value="special"/>
				<valid-value value="urgent"/>
			</valid-values>
		</property>			
		<property name="quantity" type="int"
			size="4" required="true"/>		
		<property name="unitPrice"
			stereotype="MONEY" required="true"/>
		<property name="amount"
			stereotype="MONEY">
			<calculator class="org.openxava.test.calculators.DetailAmountCalculator">
				<set property="unitPrice"/>
				<set property="quantity"/>
			</calculator>			
		</property>
		<reference model="Product" required="true"/>
		<property name="deliveryDate" type="java.util.Date">
			<default-value-calculator class="org.openxava.calculators.CurrentDateCalculator"/>
		</property>
		<reference name="soldBy" model="Seller"/>
		<property name="remarks" stereotype="MEMO"/>
		
		<property name="free" type="boolean">
			<calculator class="org.openxava.test.calculators.InvoiceDetailIsFreeCalculator"/>
		</property>		

		<validator class="org.openxava.test.validators.InvoiceDetailValidator">
			<set property="invoice"/>
			<set property="oid"/>
			<set property="product"/>
			<set property="unitPrice"/>
			<set property="amount"/>
		</validator>
		
	</aggregate>		
	
	<view name="Simple">			
		
		<members>
			year, number, date, yearDiscount;
		</members>
		
	</view>	
	      
	<view>
	
		<reference-view reference="customer" view="Simple"/>
		
		<collection-view collection="details">
			<list-properties>serviceType, product.description, product.unitPriceInPesetas, quantity, unitPrice, amount, free</list-properties>
			<edit-action action="Invoice.editDetail"/>
			<detail-action action="Invoice.viewProduct"/>
		</collection-view>
		
		<collection-view collection="deliveries" view="InInvoice" read-only="true"/>
 
		<members>
			year, number, date, paid, detailsCount;
			<group name="discounts">
				customerDiscount, customerTypeDiscount, yearDiscount;
			</group>;	
			comment;			
			<section name="customer">customer</section>
			<section name="details">details</section>			
			<section name="amounts">amountsSum; vatPercentage; vat</section>
			<section name="deliveries">deliveries</section>
		</members>			
				
	</view>
	
	<view name="NoSections">
	
		<reference-view reference="customer" view="SimpleWithCity"/>
		
		<collection-view collection="details">
			<list-properties>product.description, product.unitPrice+, quantity, amount</list-properties>
		</collection-view>
		
		<members>
			year, number, date;		
			customer;		
			details;			
			amountsSum;
			vatPercentage, vat;
			total	
		</members>			
				
	</view>		
			
	<view name="NestedSections">
		<property-view property="paid" read-only="true"/>
		<reference-view reference="customer" view="Simple"/>
		
		<members>
			year, number, date, paid;
			<section name="customer">customer</section>
			<section name="data">				 
				<section name="details">details</section>
				<section name="amounts">
					<section name="vat">vatPercentage; vat</section>				
					<section name="amountsSum">amountsSum</section>
				</section>
			</section>						
			<section name="deliveries">deliveries</section>
		</members>				
		
	</view>
	
	
	<view name="OnlyReadDetails">
	
		<collection-view collection="details" read-only="true"/>
		
		<members>
			year, number, date, paid;
			details;
		</members>

	</view>
	
	<view name="OnlyEditDetails">
	
		<collection-view collection="details" edit-only="true"/>
		
		<members>
			year, number, date, paid;
			details;
		</members>

	</view>
	
	<view name="NotAllActionsInDetails">
	
		<collection-view collection="details">
			<new-action action=""/>
			<remove-action action=""/>
			<remove-selected-action action=""/>
		</collection-view>
		
		<members>
			year, number, date, paid;
			details;
		</members>

	</view>	
	
	<view name="CustomerAsAggregateWithDeliveryPlaces">
		<reference-view reference="customer" 
			view="SimpleWithDeliveryPlaces" 
			as-aggregate="true"/>
		<members>
			year, number, date, paid;
			customer
		</members>	
	</view>	
		
	<view name="ActiveYear" extends="NoSections">
		<property-view property="year">
			<on-change class="org.openxava.test.actions.OnChangeInvoiceYearAction"/>
		</property-view>	
	</view>
		
	<view model="InvoiceDetail">
		<reference-view reference="soldBy">
			<descriptions-list/>
		</reference-view>
		<members>
			serviceType;
			quantity, unitPrice, amount;
			product;
			deliveryDate, soldBy;
			remarks
		</members>
	</view>
	
	<view name="Deliveries">
		<collection-view collection="deliveries" view="InInvoice" read-only="true">
			<view-action action="Invoice.viewDelivery"/>
		</collection-view>
						
		<members>
			year, number, date;
			deliveries
		</members>						
	</view>
	
	<view name="AddDeliveries" extends="Deliveries">
		<collection-view collection="deliveries" view="InInvoice">
			<add-action action="Invoice.addDelivery"/>
		</collection-view>
	</view>	
	 
	<view name="Amounts">
		<members>
			year, number;
			<group name="amounts" aligned-by-columns="true"> 
				customerDiscount, customerTypeDiscount, yearDiscount;
				amountsSum, vatPercentage, vat;
			</group>			
		</members>
	</view>
	
	<view name="DetailsWithTotals">
	
		<reference-view reference="customer" view="Simplest"/>
		
		<collection-view collection="details" edit-only="true">
			<list-properties>deliveryDate [invoice.deliveryDate], product.description, product.unitPrice[invoice.productUnitPriceSum], quantity, amount[invoice.amountsSum, invoice.vat, invoice.total]</list-properties>
		</collection-view>
		
		<collection-view collection="calculatedDetails">
			<list-properties>deliveryDate [invoice.deliveryDate], product.description, product.unitPrice[invoice.productUnitPriceSum], quantity, amount[invoice.amountsSum, invoice.vat, invoice.total]</list-properties>
		</collection-view>
			
		<members>
			year, number, date, vatPercentage;
			customer;
			details;
			calculatedDetails
		</members>
		
	</view>
	
	<view name="CalculatedDetails">
	
		<reference-view reference="customer" view="Simplest"/>
		
		<collection-view collection="calculatedDetails">
			<list-properties>deliveryDate, product.description, product.unitPrice, quantity, amount+</list-properties>
		</collection-view>
			
		<members>
			year, number, date, vatPercentage;
			customer;
			calculatedDetails
		</members>
		
	</view>

	<view name="CalculatedDetailsInSection">
	
		<reference-view reference="customer" view="Simple"/>
		
		<members>
			year, number, date, paid;
			<section name="customer">customer</section> 
			<section name="data">
				<section name="details">details</section>
				<section name="amounts">amountsSum; vatPercentage; vat</section>
			</section>
			<section name="deliveries">deliveries</section>
			<section name="calculatedDetails">calculatedDetails</section>
		</members>
		
	</view>
	
	<view name="DetailsWithVatPercentage">
	
		<reference-view reference="customer" view="Simplest"/>
		
		<collection-view collection="details">
			<list-properties>product.description, product.unitPrice, quantity, amount[invoice.amountsSum, invoice.vatPercentage, invoice.vat, invoice.total]</list-properties>
		</collection-view>
			
		<members>
			year, number, date;
			customer;
			details
		</members>
		
	</view>
	
	<view name="CalculatedDetailsWithVatPercentage">
	
		<reference-view reference="customer" view="Simplest"/>
		
		<collection-view collection="calculatedDetails">
			<list-properties>product.description, product.unitPrice, quantity, amount[invoice.amountsSum, invoice.vatPercentage, invoice.vat, invoice.total]</list-properties>
		</collection-view>
			
		<members>
			year, number, date;
			customer;
			calculatedDetails
		</members>
		
	</view>
	
	<tab>
		<properties>year, number, date, amountsSum, vat, detailsCount, paid, importance</properties>
	</tab>
		
	<tab name="Level4Reference">
		<properties>year, number, customer.seller.level.description</properties>
	</tab>
		
	<tab name="Simple">
		<properties>year, number, date, customer.number</properties>		
		<default-order>${year} desc, ${number} desc</default-order>
	</tab>
	
	<tab name="Current">
		<filter class="org.openxava.test.filters.CurrentYearFilter"/>
		<properties>year, number, amountsSum, vat, detailsCount, paid, customer.name</properties>
		<base-condition>${year} = ?</base-condition>
	</tab>	
	
	<tab name="CurrentSelect">
		<filter class="org.openxava.test.filters.CurrentYearFilter"/>
		<properties>year, number, amountsSum, paid, customer.name</properties>
		<base-condition>
			select 
				${year}, ${number}, ${amountsSum}, ${paid}, ${customer.name}
			from
				XAVATEST@separator@FACTURA, XAVATEST@separator@CLIENTE
			where 
				XAVATEST@separator@FACTURA.CLIENTE_CODIGO = XAVATEST@separator@CLIENTE.CODIGO AND
				${year} = ?				
		</base-condition>
	</tab>
	
	<tab name="DefaultYear">
		<filter class="org.openxava.test.filters.DefaultYearFilter"/>
		<properties>year, number, customer.number, customer.name, amountsSum, vat, detailsCount, paid, importance</properties>
		<base-condition>${year} = ?</base-condition>
	</tab>
	
	<tab name="DefaultYearEnv">
		<filter class="org.openxava.test.filters.DefaultYearEnvFilter"/>
		<properties>year, number, customer.number, customer.name, amountsSum, vat, detailsCount, paid, importance</properties>
		<base-condition>${year} = ?</base-condition>
	</tab>	
	
	<tab name="ActiveYear">
		<filter class="org.openxava.test.filters.ActiveYearFilter"/>
		<properties>year, number, customer.number, customer.name, amountsSum, vat, detailsCount, paid, importance</properties>
		<base-condition>${year} = ?</base-condition>
	</tab>		
	
	<tab name="Invoice20020001">
		<filter class="org.openxava.test.filters.Invoice20020001Filter"/>
		<properties>year, number, amountsSum, vat</properties>
		<base-condition>${year} = ? and ${number} = ?</base-condition>
	</tab>
	
	<tab name="YearParameter">
		<filter class="org.openxava.test.filters.YearParameterFilter"/>
		<properties>year, number, customer.number, customer.name, amountsSum, vat, detailsCount, paid, importance</properties>
		<base-condition>${year} = ?</base-condition>
	</tab>
	
	<tab name="ManyTypes">
		<properties>year, number, date, amountsSum, customer.email, paid, customer.name, customer.type, customer.seller.name</properties>
	</tab>			
		
	<entity-mapping table="XAVATEST@separator@INVOICE">
		<property-mapping
			property="year" column="YEAR"/>
		<property-mapping
			property="number" column="NUMBER"/>
		<property-mapping			
			property="date" column="DATE"/>			
		<property-mapping
			property="vatPercentage" column="VATPERCENTAGE"/>
		<property-mapping
			property="comment" column="COMMENT"/>						
		<property-mapping
			property="paid" column="PAID" cmp-type="String">
			<converter class="org.openxava.converters.BooleanSNConverter"/>
		</property-mapping>
		<reference-mapping reference="customer">
			<reference-mapping-detail 
				column="CUSTOMER_NUMBER" 				
				referenced-model-property="number"/> 
		</reference-mapping>			
	</entity-mapping>
	
	<aggregate-mapping aggregate="InvoiceDetail" table="XAVATEST@separator@INVOICEDETAIL">
		<reference-mapping reference="invoice">
			<reference-mapping-detail 
				column="INVOICE_YEAR" 
				referenced-model-property="year"/> 
			<reference-mapping-detail 
				column="INVOICE_NUMBER" 
				referenced-model-property="number"/> 				
		</reference-mapping>				
		<property-mapping property="oid" column="OID"/>
		<property-mapping property="serviceType" column="SERVICETYPE"/>
		<property-mapping
			property="unitPrice" column="UNITPRICE"/>
		<property-mapping
			property="quantity" column="QTY"/>
		<reference-mapping reference="product">
			<reference-mapping-detail 
				column="PRODUCT_NUMBER" 
				referenced-model-property="number"/> 
		</reference-mapping>								
		<multiple-property-mapping property="deliveryDate">
			<converter class="org.openxava.converters.Date3Converter"/>	
			<cmp-field converter-property="day" column="DAYDELIVERY" cmp-type="int"/>
			<cmp-field converter-property="month" column="MONTHDELIVERY" cmp-type="int"/>
			<cmp-field converter-property="year" column="YEARDELIVERY" cmp-type="int"/>			
		</multiple-property-mapping>
		<reference-mapping reference="soldBy">
			<reference-mapping-detail 
				column="SOLDBY_NUMBER" 
				referenced-model-property="number"/> 
		</reference-mapping>										
		<property-mapping
			property="remarks" column="REMARKS"/>				
	</aggregate-mapping>

</component>