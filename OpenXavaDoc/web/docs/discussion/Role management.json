{"page":"security-jsr250-discarded","page_id":"4914153","share_type":"discussion","created":"2008-07-07T01:57:09-07:00","createdBy":"javierpaniza","title":"Role management","description":"Creating a role management system for OX can be a good idea, but this documents is not about that. It's about role base access and must be independent of the underlaying role management system.<br \/>\n<br \/>\nIdeally the implementation would just use isUserInRol of JavaEE. It will be wonderfull that isUserInRol would work fine against major portal servers. If this is not the case, we can implement our own isUserInRol, and develop a plugable way for plug it against Liferay, WebSphere Portal, JavaEE isUserInRol and your own Role management, for example.<br \/>\n<br \/>\nDo you grasp my thought ?","replies":[{"user":"depourtales","created":"2008-07-07T12:54:31-07:00","body":"Yes I follow you on the conceptual view and I understand your will to capitalize on existing role management systems (ie portals) - we do the same thing when possible. My point of view is that the majority of OX applications are deployed as standalone applications (at least by us ;-)) and in these cases we have to find an elegant way to manage the users associated to the roles. <br \/>\n<br \/>\nAs you say, a good design should be a separation of both (access control and user-role management) with some abstract implementation of isUserInRole which by default rely on the standard JEE implementation or may be injected by any configuration file <br \/>\n<br \/>\nA default implementation for standalone user and role management my be really a plus for OX as it should not bew each time reinvented. On way may be to implement it like the AccessTracking project for example."},{"user":"javierpaniza","created":"2008-07-08T08:09:42-07:00","body":"<em>a good design should be a separation of both (access control and user-role management)<\/em><br \/>\nExactly!<br \/>\nIn my case, all our customers work with portals. We have customers with Liferay, Jetspeed and WebSphere Portal.<br \/>\n<br \/>\n<em>A default implementation for standalone user and role management my be really a plus for OX as it should not bew each time reinvented. On way may be to implement it like the AccessTracking project for example.<\/em><br \/>\nYes. It can be a good idea. In fact, I have to admit that one of the options for OpenXava 4 is a integrated user management and module navigations, your <em>role managament<\/em> is a big step ahead forward it.<br \/>\nIf you develop it, I'll include it in OpenXava, but the 'roles based security' must not depend on it."}]}